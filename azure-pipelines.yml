# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- staging

pool:
  name: Testing Environment Agent Pool

variables:
  AgentPool: "Testing Environment Agent Pool"
  DockerRegistry: "acr-connection"
  ResourceGroupName: "rg-hnx-staging-southeastasia"
  DockerRegistryURL: "crhnxswsoutheastasia.azurecr.io"
  environment: "staging"
  location: "southeastasia"
  repository: "swallet.managerservice"
  application: "SWallet.ManagerService"
  AppSettings: "Projects/SWallet/Flow/SWallet.ManagerService"

steps:

- script: |
    echo "$(environment)-appsettings"
    az storage blob download --container-name "$(environment)-appsettings" --name "$(application).appsettings.Development.json" --file "$(application).appsettings.Development.json" --account-name sthnxdevsoutheastasia --account-key $(storage_account_key)
    cp $(application).appsettings.Development.json "$(System.DefaultWorkingDirectory)/$(AppSettings)/appsettings.Development.json"
    cp $(application).appsettings.Development.json "$(System.DefaultWorkingDirectory)/$(AppSettings)/appsettings.json"
  displayName: "Replace $(application) AppSettings Files"

- task: Docker@2
  inputs:
    containerRegistry: 'acr-connection'
    repository: 'swallet.managerservice'
    command: 'buildAndPush'
    Dockerfile: '$(AppSettings)/Dockerfile'
    buildContext: '.'
    tags: |
      $(Build.BuildNumber)
      latest

- task: SSH@0
  condition: eq(variables.environment, 'staging')
  displayName: "Docker Server Pull $(application)"
  inputs:
    sshEndpoint: 'ssh-docker-srv'
    runOptions: 'commands'
    commands: |
      echo "Login to Azure Container Registry"
      echo $(ACR_ACCESS_TOKEN) | docker login $(DockerRegistryURL) -u $(ACR_USERNAME) --password-stdin > /dev/null 2>&1
      echo "Attempting to pull the Docker image..."
      echo $(DockerRegistryURL)/$(repository):$(Build.BuildNumber)
      docker pull $(DockerRegistryURL)/$(repository):$(Build.BuildNumber)
    readyTimeout: '20000'

- task: SSH@0
  condition: and(eq(variables.environment, 'staging'), eq(variables.repository, 'swallet.managerservice'))
  displayName: "Run $(application) container"
  inputs:
    sshEndpoint: 'ssh-docker-srv'
    runOptions: 'commands'
    commands: |
      docker stop crhnxswsoutheastasia-$(repository) || true
      docker rm -f crhnxswsoutheastasia-$(repository) || true
      docker run -d --name crhnxswsoutheastasia-$(repository) -p 94:80 $(DockerRegistryURL)/$(repository):$(Build.BuildNumber)